generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum UserRole {
  CUSTOMER
  PENDING_ORGANIZER
  ORGANIZER
}

model User {
  id                 String               @id @default(cuid())
  firstName          String
  lastName           String
  email              String               @unique
  passwordHash       String
  role               UserRole             @default(CUSTOMER)
  referralCode       String               @unique @default(cuid())
  profilePictureUrl  String?
  bio                String?
  organizationName   String?
  organizationDesc   String?
  organizationAddr   String?
  organizationPhone  String?
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  PasswordResetToken PasswordResetToken[]
  referrer           User?                @relation("referrals", fields: [referrerId], references: [id])
  referrerId         String?
  referrals          User[]               @relation("referrals")
  points             Int                  @default(0)
  coupons            Coupon[]
  pointBatches       UserPointBatch[]
}

model PasswordResetToken {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Coupon {
  id        String   @id @default(cuid())
  code      String   @unique
  discount  Int
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  isUsed    Boolean  @default(false)
  createdAt DateTime @default(now())
  expiresAt DateTime
}

model UserPointBatch {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  points    Int
  createdAt DateTime @default(now())
  expiresAt DateTime
}
